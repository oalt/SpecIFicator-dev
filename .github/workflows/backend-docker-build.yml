name: Build backend and push Docker

on:
  workflow_dispatch:

jobs:
  publish_docker:

    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      SOLUTION_NAME: SpecIF_Backend-dev.sln 
      DOCKER_IMAGE_NAME: specificator/specif_backend 
      
    steps:      
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Set integration version from current date
      run: echo "DATE_VERSION=$(date +'%Y.%j')" >> $GITHUB_ENV

    - name: Create version number
      run: echo "VERSION=$(echo $DATE_VERSION.$GITHUB_RUN_NUMBER)" >> $GITHUB_ENV

    - name: Echo version number
      run: echo $VERSION
      
    - name: Publish
      run: dotnet publish -c Release /p:Version=${VERSION} --runtime linux-x64 ./src/${SOLUTION_NAME}
      
    - name: login Docker
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
          images: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
          subject-name: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
    
     
    
      
      
